sample(seq(36.36.8,0.1),n=14)
sample(seq(36,36.8,0.1),n=14)
sample(seq(36,36.8,0.1),size = 14,replace = T)
sample(seq(36,36.7,0.1),size = 14,replace = T)
sample(seq(36,36.9,0.1),size = 14,replace = T)
sample(seq(36,36.7,0.1),size = 14,replace = T)
sample(seq(36,36.7,0.1),size = 14,replace = T)
sample(seq(36.2,36.8,0.1),size = 14,replace = T)
sample(seq(36.1,36.7,0.1),size = 14,replace = T)
install.packages("scales")
install.packages(c("MASS", "nlme", "survival"), lib="/opt/homebrew/Cellar/r/4.2.0/lib/R/library")
1.96*sqrt(0.8*0.2)/0.03
(1.96*sqrt(0.8*0.2)/0.03)^2
(1.96*sqrt(0.9*0.1)/0.03)^2
(1.96*sqrt(0.8*0.2)/0.1)^2
(1.96*sqrt(0.8*0.2)/0.05)^2
(1.96*sqrt(0.95*0.05)/0.06)^2
(1.96*sqrt(0.8*0.2)/0.06)^2
(1.96*sqrt(0.8*0.2)/0.03)^2
(1.96*sqrt(0.95*0.05)/0.03)^2
1.96*sqrt(.8*.2)/.1
1.96*sqrt(.8*.2)/.01
78^2
1.96*sqrt(.8*.2)/.03
(1.96*sqrt(.8*.2)/.03)^2
library(pROC)
help(pROC)
par()$cex
data.df=read.csv('downsample_all_sample_scores.csv',header = T)
train.df=subset(data.df,Cohort=='Training')
test.df=subset(data.df,Cohort=='Test')
library(Rtsne)
?Rtsne
a=261
b=475
a/(a+b)
b/(a+b)
a=263
b/(a+b)
a=176
b=87
a/(a+b)
b/(a+b)
a=418
b=57
a/(a+b)
b/(a+b)
4/231
t=231
38/t
61/t
107/t
14/t
7/t
t=32
2/t
17/t
1/t
10/t
t=263
33/t
60/t
116/t
32/t
22/t
22/263
library(ggplot2)
?position_dodge
install.packages('kernlab')
x=1:5
y=2:6
library(kernlab)
?gausspr
t=gausspr(x,y,scaled=T)
t
View(t)
t=gausspr(x,y,scaled=F)
fitted(t)
predict(t,x)
version
vignette('kernlab')
function(prcomp)
functionBody(prcomp)
functionBody(prcomp)
UseMethod("prcomp")
showMethods('prcomp')
getMethod('prcomp')
prcomp
edit(prcomp)
methods(prcomp)
prcomp.formula
prcomp.formula*
prcomp.default
prcomp::prcomp.default
stats::prcomp
stats::prcomp.prcomp.default
getAnywhere(prcomp)
getAnywhere(prcomp.default)
?svd
?svd
choose(6,4)
t=matrix(c(1,1,1,2,3,2),nrow=2)
t
t=matrix(c(1,1,1,2,3,2),ncol=2)
t
prcomp(t)
prcomp(t,center = T)
prcomp(t,center = T,scale. = F)
prcomp(t,center = T,scale. = T)
prcomp(t,center = T,scale = T)
paste0(c(1,2,3),collapse = ';')
paste0(c(1,2,3),collapse = ';',sep=' ')
y=c(1:10)
set.seed(1)
x1=sample(1:100,10)
x2=sample(1:100,10)
x3=sample(1:100,10)
df=data.frame(y=y,x1=x1,x2=x2,x3=x3)
library(caret)
train=train(y~x1+x2+x3,data=df,method = 'glmnet')
install.packages("car")
library(car)
vif(train)
train_lm=glm(y~x1+x2+x3,data=df)
vif(train_lm)
107*1.5
107*1.2
107*1.25
107*1.3
data.df=readRDS('/Users/li.yulong/Downloads/merge.MD.first_short.first_long.baseline.txt.model.rds')
View(data.df)
(52+68)/(78+86)
10^6*1.5*0.01
all=10^6*1.5*0.01
all*0.83*0.99
all=1500
all*0.83*0.99
all*0.83*0.01
10^5*0.015
10^5*98.5/100
b=10^5*98.5/100
b*0.83/100
a=10^5*0.015
a
a*0.83*0.99
b*0.83*0.01
a*0.86*0.99
b*0.86*0.01
all=10^5
all*0.86
all*0.015
can=1500
can*0.86
can*0.83
(all-can)*0.86*0.01
(all-can)*0.01
all;can
non=all-can
non
can*0.83
can*0.86
1245/(1245+985)
5/352
round(5/352)
(52+68)/238
(52+68)/(78+86)
?dnorm
dnorm(1)
?wilcox.test
library(ggplot2)
?geom_boxplot
70000-1070*2-490-900-3750-3090-270
library(Rtsne)
version(Rtsne)
install.packages('Rtsne')
install.packages("Rtsne")
package_version('Rtsne')
package_version(Rtsne)
packageversion(Rtsne)
packageVersion(Rtsne)
packageVersion('Rtsne')
0.05/800
8/86
78/86
72/86
14/86
t=c(3,14,13,39,13,4)
sum(t)
t/86
t/86*100
round(t/86*100,0)
sum(round(t/86*100,0))
84/86
2/86
a=126
t=c(23,103)
round(t/a,0)
round(t/a*100,0)
t=c(101,25)
round(t/a*100,0)
a=84
t=c(14,70)
round(t/a*100,0)
t=c(71,13)
round(t/a*100,0)
t=c(3,13,13,39,12,4)
sum(round(t/86*100,0))
sum(round(t/84*100,0))
round(t/a*100,0)
sum(round(t/84*100,2))
round(t/a*100,2)
t=c(21,104)
round(t/a*100,2)
a=125
round(t/a*100,2)
t=c(113,12)
round(t/a*100,0)
(72+101+71+113)/(170+251)
(78+103+70+104)/(170+251)
(84+84)/170
3+14+13
30/86
29/84
log10(.4372)
library(pROC)
?roc
?wilcox
?wilcox.test
?wilcox.test
setwd('/Users/li.yulong/Desktop/cell cycle manuscript/code/Scripts')
source('create_typhoon_plot_functions.R')
install.packages('GenomicRanges')
total_TPM.df=read.csv('../Data/RNA_TPM.csv',header = T,check.names = F)
colnames(total_TPM.df)
### Gausian Process modeling for cell cycle genes
nuc.df=read.csv('../Data/genebody_nuc_score.csv',header = T,check.names = F)
View(nuc.df)
cycle_gene.df=read.csv('../Data/RNA_f_score.csv',header = T)
View(cycle_gene.df)
